# Requires
fastlane_version '2.159.0'

skip_docs
default_platform(:ios)

# Constants

WORKSPACE_NAME = "Mistica.xcworkspace"
TMP_BUILDS_PATH = "pkg/dist"
MISTICA_APP_INFO_PLIST_PATH = "./Examples/MisticaApp/MisticaApp/SupportFiles/Info.plist"
MISTICA_APP_IPA_PATH = "#{TMP_BUILDS_PATH}/MisticaApp.ipa" 

ENV["DEVELOPER_DIR"] = "/Applications/Xcode-12.app/Contents/Developer" if is_ci()

platform :ios do

  before_all do
    xcversion(version: "12")
  end

  desc "Setup the external dependencies and stuff needed to have a full working environment experience"  
  lane :setup do
    UI.message "Installing homebrew"
    
    if system("which -s brew;")
      UI.success "Homebrew already installed"      
    else
      system('CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"')
      UI.success "Done ✅"
    end

    UI.message "Installing carthage"
    brew_install_or_update(
      formula: "carthage"
    )
    UI.success "Done ✅"

    UI.message "Installing swiftformat"
    brew_install_or_update(
      formula: "swiftformat"
    )
    UI.success "Done ✅"

    UI.message "Installing swiftformat"
    Dir.chdir("..") do
      sh("./carthage-build.sh")
    end
    UI.success "Done ✅"

  end

  desc "Build Mistica catalog and upload to AppCenter"
  lane :build_and_deploy_mistica_catalog do
  	ensure_git_status_clean

  	increment_build_number_in_info_plist(
      path: MISTICA_APP_INFO_PLIST_PATH
    )

  	gym(
        workspace: WORKSPACE_NAME,
        scheme: "MisticaApp",
        configuration: "Release",
        codesigning_identity: "iPhone Distribution: Tuenti Technologies SL",
        export_team_id: "JA666WMX28",
        output_directory: TMP_BUILDS_PATH,
        export_method: 'enterprise',
        clean: true
    )

    appcenter_upload(
  	  api_token: get_appcenter_api_token,
  	  owner_name: "Tuenti-Organization",
  	  app_name: ENV['APPCENTER_PROJECT_NAME'],
  	  destinations: "Public",
  	  file: MISTICA_APP_IPA_PATH,
  	  release_notes: "https://github.com/Telefonica/mistica-ios/blob/master/CHANGELOG.md"
  	)

    reset_git_repo
  end

end

##############################################################
# Helper Functions
##############################################################

def increment_build_number_in_info_plist(params)
	buildNumber = get_info_plist_value(
  		path: params[:path], 
  		key: "CFBundleVersion"
  	).to_i

  	set_info_plist_value(
  		path: params[:path],
  		key: "CFBundleVersion",
  		value: (buildNumber + 1).to_s
  	)	
end

def get_appcenter_api_token
	UI.header "AppCenter API Token"

	appcenter_api_token = ENV['APPCENTER_API_TOKEN'] ||`git config --local --get appcenter.apitoken`.strip

	if appcenter_api_token.empty?
		appcenter_api_token = UI.input("No AppCenter user API token found., Which is your AppCenter user API token? ")

		`git config --local appcenter.apitoken #{appcenter_api_token}`
	else
		UI.success "AppCenter API token configured :)"
   end

   return appcenter_api_token
end

def brew_install_or_update(params)
  if system("brew ls --versions #{params[:formula]} >/dev/null;")
    UI.message "Updating brew formula #{params[:formula]}"
    system("brew upgrade #{params[:formula]}")
  else
    UI.message "Installing brew formula #{params[:formula]}"
    system("brew install #{params[:formula]}")
  end
end

def is_ci
  # Check for Jenkins environment variables
  ['JENKINS_HOME', 'JENKINS_URL'].each do |current|
    return true if ENV.key?(current)
  end
  return false
end
