name: Deploy Mistica Catalog (AppCenter)

on:
  release:
    types: [published]
  workflow_dispatch:
        inputs:
            app-center-project:
              description: 'App Center app name'
              type: choice
              options:
              - "Internal Enterprise (Mistica-iOS)"
              - "Alpha (Mistica-SwiftUI-iOS)"
              required: true

jobs:
  deploy-mistica-catalog:
    name: Build enterprise
    runs-on: macos-15
    steps:
      - name: Set configuration variables
        shell: bash
        run: |
          echo "::group::Setting variables..."
          if [ "${{ github.event.inputs.app-center-project }}" = "Internal Enterprise (Mistica-iOS)" ]; then
              echo 'APP_CENTER_PROJECT=Mistica-iOS' >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.app-center-project }}" = "Alpha (Mistica-SwiftUI-iOS)" ]; then
              echo 'APP_CENTER_PROJECT=Mistica-SwiftUI-iOS' >> $GITHUB_OUTPUT
          else
              # Default value for automatic triggers like `release, `push`, ...
              echo 'APP_CENTER_PROJECT=Mistica-iOS' >> $GITHUB_OUTPUT
          fi
          echo "::endgroup::"
        id: variables

      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Checkout Telefonica/ios-github-workflows repo
        uses: actions/checkout@v4
        with:
          repository: Telefonica/ios-github-workflows
          token: "${{ secrets.NOVUM_PRIVATE_REPOS }}"
          path: .ios-github-workflows

      - name: Setup
        id: setup
        uses: ./.ios-github-workflows/.github/actions/setup-mac-dependencies
      - run: xcodebuild -version
  
      - name: Install certificate and provisioning profiles
        id: install-cert-and-prov
        uses: ./.ios-github-workflows/.github/actions/install-signing-certificates-and-provisionings
        with:    
          certificate-base64: ${{ secrets.MISTICA_ENTERPRISE_CERTIFICATE }}
          certificate-password: ${{ secrets.MISTICA_ENTERPRISE_P12_PWD }}
          apple-enterprise-api-key-id: ${{ secrets.APPLE_ENTERPRISE_API_KEY_ID }}
          apple-enterprise-api-private-key-base64: ${{ secrets.APPLE_ENTERPRISE_API_PRIVATE_KEY }}
          apple-enterprise-api-issuer-id: ${{ secrets.APPLE_ENTERPRISE_API_ISSUER_ID }}

      - name: Export
        run: make export

      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.13.0

      - name: Upload ipa to AppCenter
        run: npx -p appcenter-cli appcenter distribute release -a Tuenti-Organization/${{ steps.variables.outputs.APP_CENTER_PROJECT }} -f ./build/ios.ipa -g Public --token ${{ secrets.APPCENTER_API_TOKEN }}
